üóÇÔ∏è Principais Branches do Git Flow:

1. main (ou master)
Fun√ß√£o: Armazena a vers√£o est√°vel e em produ√ß√£o do projeto.
Uso:
Apenas atualizada por meio de merges a partir da branch release ou hotfix.
Nunca desenvolvemos diretamente nessa branch.
Exemplo:
C√≥digo implantado em produ√ß√£o (vers√£o 1.0, vers√£o 2.0, etc.).


5. hotfix
Fun√ß√£o: Corrigir rapidamente bugs cr√≠ticos em produ√ß√£o.
Uso:
Criada a partir de main em caso de erro urgente.
Ap√≥s a corre√ß√£o, √© mesclada em main e develop.
Exemplo:
hotfix/corrigir-erro-login
hotfix/fix-api-timeout

4. release
Fun√ß√£o: Preparar uma nova vers√£o est√°vel do software.
Uso:
Criada a partir de develop quando as features est√£o finalizadas.
Aqui acontecem testes finais, corre√ß√µes menores e ajustes de documenta√ß√£o.
Ao concluir, √© mesclada em main (gerando uma nova vers√£o) e em develop.
Exemplo:
release/v1.0.0
release/v2.1.0

2. develop
Fun√ß√£o: Centraliza o c√≥digo em desenvolvimento.
Uso:
Base para novas funcionalidades (branches feature).
Quando um conjunto de funcionalidades est√° pronto para uma nova vers√£o, √© criada uma branch release a partir daqui.
Exemplo:
C√≥digo em progresso, n√£o necessariamente est√°vel, mas pronto para integra√ß√£o.

3. feature
Fun√ß√£o: Implementar novas funcionalidades ou melhorias.
Uso:
Sempre criada a partir da branch develop.
Ap√≥s finalizada, √© mesclada de volta em develop.
Nome padr√£o: feature/nome-da-feature.
Exemplo:
feature/adicionar-login
feature/integrar-api

üìä Fluxo Resumido:
Desenvolver novas funcionalidades ‚Üí feature ‚Üí merge em develop.
Preparar uma nova vers√£o ‚Üí release ‚Üí merge em main e develop.
Corrigir bugs cr√≠ticos ‚Üí hotfix ‚Üí merge em main e develop.
